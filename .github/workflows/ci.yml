name: Django CI

on:
  push:
    branches: [ "main" ]
    paths-ignore: [ "docs/**", ".docker/**", "script/**", "README.md" ]

  pull_request:
    branches: [ "main" ]
    paths-ignore: [ "docs/**", ".docker/**", "script/**", "README.md" ]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres

    env:
      # postgres://user:password@host:port/database
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.6

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run Test
        run: |
          source .venv/bin/activate
          python manage.py test --settings=lampsz.settings.local

  deploy:

    runs-on: ubuntu-latest
    needs: build
    timeout: 7

    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "lampsz"
          heroku_email: ${{secrets.HEROKU_EMAIL}}
      - run: heroku run python manage.py migrate

from enum import Enum

from rest_framework.exceptions import ErrorDetail

# Types
ValidationErrors = dict[str, list[ErrorDetail]]


# Enums
class UserType(Enum):
    BUSINESS = 1
    INFLUENCER = 2


# Util Functions
def has_unique_error(field: str, errors: ValidationErrors) -> bool:
    """Determines whether validation error contains unique errors.

    :param field: the field that may have unique errors.
    :param errors: the validation error generated by serializer.
    :return: True if there are unique errors, False otherwise.
    """
    if field not in errors:
        return False

    return len([error for error in errors.get(field) if error.code == "unique"]) > 0
